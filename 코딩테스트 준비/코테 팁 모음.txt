히든 케이스/엣지 케이스를 발견하고, 이를 테스트할 수 있는 테스트 케이스를 빠르게 만들 수 있는 능력도 중요

문제를 풀 때에도 바로 제출해보는 게 아니라, 테스트 케이스를 충분히 고려해보고 적절하다고 판단될 때 제출

오래 걸렸거나 풀이를 본 문제는 기록해두고, 다시 푸는 것도 중요

스킬 체크의 경우 시간 제한이 있기 때문에 집중해서 풀어볼 수 있음

문제 모음에서는 기출 문제들을 풀어볼 수 있기 때문에 점수를 높일 수 있는 좋은 방법

빠킹독님의 실전 알고리즘 강의와 문제집도 많이 도움됨

조건, 제한사항을 꼼꼼히 읽어보는 것이 문제 유형과 엣지 케이스를 파악하는데 도움됨

마지막에 제출한번씩 다 누르기

[입력 빠르게 받는법]
import sys
input = sys.stdin.readline

[시간복잡도 계산]
숫자가 20억 넘어가면 int -> long
1초 2억개 연산
10초 -> 20억개 연산

[예외케이스 찾기]
일단 예외 테스트 케이스 추가해놓고
코드실행하기
완전 짧은거
완전 긴거 등

[assert 활용]
assert age >= 0, '나이가 마이너스인게 가능한가 휴먼?'

<<<<<<< HEAD
코테 보기전에 피드백 한번 쫙 훑기
=======
코테 보기전에 피드백 한번 쫙 훑기

for문 안에 조건문 다시 쓰기 귀찮아서 복붙 하지마라 이거때매 삽질 겁나한다
<<<<<<< HEAD

★★★ itertool 사용법 외우기

B D 백 시 투 이 그 D M 다 플 

BFS DFS 백트래킹 시뮬레이션 투포인터 이진탐색 그리디 DP MST 다익스트라 플루이드와샬
=======
>>>>>>> 08c698b322a713c39a825c3fa0eb1da250b63108
>>>>>>> 0f9e3a0d16658ff943d773938a2c05c0daf92738
